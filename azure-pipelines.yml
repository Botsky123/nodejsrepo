trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'docker_registry'
  imageRepository: 'botskynodejsrepo'
  containerRegistry: 'testcontainerregistrydemo.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
  clairServerUrl: 'http://172.208.88.203:6060'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        wget https://github.com/arminc/clair-scanner/releases/download/v12/clair-scanner_linux_amd64
        mv clair-scanner_linux_amd64 clair-scanner
        chmod +x clair-scanner
      displayName: 'Install clair-scanner'

    - script: |
        AGENT_IP=$(curl -s http://ifconfig.me)
        echo "Detected Agent IP: $AGENT_IP"
        docker save -o image.tar $(imageRepository):$(tag)
        ./clair-scanner --clair="${clairServerUrl}" --ip="$AGENT_IP" --reportAll=true --log=debug --reportPath=clair-report.json --threshold="Negligible" $(imageRepository):$(tag) || true
      displayName: 'Scan Docker image with clair-scanner'
      env:
        DOCKER_BUILDKIT: 1

    - script: |
        if [ -f clair-report.json ]; then
            if grep -q "High" clair-report.json; then
              echo "High vulnerabilities found, failing build"
              exit 1
            else
              echo "No high vulnerabilities found. Proceeding with build."
            fi
        else
            echo "clair-report.json does not exist, check Clair scanner configuration."
            exit 1
        fi
      displayName: 'Check for vulnerabilities'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
